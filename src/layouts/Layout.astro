---
import Navigation from '../components/Navigation.astro';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonical?: string;
  type?: string;
  publishedTime?: string;
  modifiedTime?: string;
  tags?: string[];
}

const { 
  title, 
  description = "A clean and beautiful personal blog", 
  image = "/og-image.jpg",
  canonical,
  type = "website",
  publishedTime,
  modifiedTime,
  tags = []
} = Astro.props;

const siteUrl = "https://cerebralatlas.com";
const canonicalUrl = canonical ? `${siteUrl}${canonical}` : `${siteUrl}${Astro.url.pathname}`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={tags.join(", ")} />
    <meta name="author" content="Cerebral Atlas" />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalUrl} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" sizes="512x512" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    
    <!-- RSS Feed -->
    <link rel="alternate" type="application/rss+xml" title="RSS Feed" href="/rss.xml" />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={`${siteUrl}${image}`} />
    <meta property="og:site_name" content="Cerebral Atlas' Blog" />
    {publishedTime && <meta property="article:published_time" content={publishedTime} />}
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {tags.length > 0 && tags.map(tag => <meta property="article:tag" content={tag} />)}
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalUrl} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={`${siteUrl}${image}`} />
    <meta name="twitter:creator" content="@cerebralatlas" />
    
    <!-- Additional SEO -->
    <meta name="robots" content="index,follow" />
    <meta name="googlebot" content="index,follow" />
    <meta name="bingbot" content="index,follow" />
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    
    <!-- Performance -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com" />
    <link rel="dns-prefetch" href="//fonts.gstatic.com" />
    
    <!-- Structured Data -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": type === "article" ? "BlogPosting" : "WebSite",
      "name": title,
      "headline": title,
      "description": description,
      "url": canonicalUrl,
      "image": `${siteUrl}${image}`,
      "author": {
        "@type": "Person",
        "name": "Cerebral Atlas",
        "url": siteUrl
      },
      "publisher": {
        "@type": "Person",
        "name": "Cerebral Atlas",
        "url": siteUrl
      },
      "datePublished": publishedTime,
      "dateModified": modifiedTime,
      "keywords": tags.join(", "),
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": canonicalUrl
      }
    })} />
    
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      // Theme initialization
      const savedTheme = localStorage.getItem('theme') || 'light';
      if (savedTheme === 'dark' || (!savedTheme && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.setAttribute('data-theme', 'dark');
      }
    </script>
  </head>
  <body>
    <Navigation />
    <main>
      <slot />
    </main>
  </body>
</html>

<style is:global>
  :root {
    /* Modern Sage Green & Warm Tones */
    --color-primary: #2D5A3D;        /* Sage Green */
    --color-secondary: #8B7355;      /* Warm Brown */
    --color-accent: #D4A574;         /* Soft Gold */
    --color-background: #F8F6F3;     /* Warm White */
    --color-surface: #F0EDE8;        /* Light Warm Gray */
    --color-border: #E5E0D8;         /* Soft Border */
    --color-text: #2D3748;           /* Charcoal */
    --color-text-secondary: #718096; /* Muted Gray */
    
    /* Dark mode colors - Warm Sophisticated Dark */
    --color-dark-primary: #E8E6E3;   /* Warm White */
    --color-dark-secondary: #A0956B; /* Muted Gold */
    --color-dark-accent: #D4A574;    /* Soft Gold */
    --color-dark-background: #1E1E1E; /* Warm Dark Gray */
    --color-dark-surface: #2A2A2A;   /* Elevated Surface */
    --color-dark-border: #404040;    /* Subtle Border */
    --color-dark-text: #F5F3F0;      /* Warm White */
    --color-dark-text-secondary: #B8B3A8; /* Muted Warm Gray */
    
    /* Typography */
    --font-sans: "SF Pro Display", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
    --font-mono: "SF Mono", Monaco, "Cascadia Code", "Roboto Mono", Consolas, "Courier New", monospace;
    
    /* Spacing */
    --space-xs: 0.5rem;
    --space-sm: 1rem;
    --space-md: 1.5rem;
    --space-lg: 2rem;
    --space-xl: 3rem;
    --space-2xl: 4rem;
    
    /* Border radius */
    --radius-sm: 8px;
    --radius-md: 12px;
    --radius-lg: 16px;
    
    /* Shadows */
    --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);
    --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.15);
    --shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.2);
  }

  [data-theme="dark"] {
    --color-primary: var(--color-dark-primary);
    --color-secondary: var(--color-dark-secondary);
    --color-accent: var(--color-dark-accent);
    --color-background: var(--color-dark-background);
    --color-surface: var(--color-dark-surface);
    --color-border: var(--color-dark-border);
    --color-text: var(--color-dark-text);
    --color-text-secondary: var(--color-dark-text-secondary);
    
    --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.2);
    --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.3);
    --shadow-lg: 0 8px 24px rgba(0, 0, 0, 0.4);
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: var(--font-sans);
    font-size: 16px;
    line-height: 1.6;
    scroll-behavior: smooth;
  }

  body {
    min-height: 100vh;
    background-color: var(--color-background);
    color: var(--color-text);
    font-size: 1rem;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  main {
    min-height: calc(100vh - 52px);
    padding-top: 52px; /* Space for fixed navigation */
  }

  h1, h2, h3, h4, h5, h6 {
    font-weight: 600;
    line-height: 1.2;
    color: var(--color-text);
  }

  h1 {
    font-size: 3rem;
    font-weight: 700;
  }

  h2 {
    font-size: 2.25rem;
  }

  h3 {
    font-size: 1.875rem;
  }

  h4 {
    font-size: 1.5rem;
  }

  h5 {
    font-size: 1.25rem;
  }

  h6 {
    font-size: 1rem;
  }

  p {
    color: var(--color-text);
    margin-bottom: var(--space-sm);
  }

  a {
    color: var(--color-accent);
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
  }

  a:hover {
    color: #B8935F;
    transform: translateY(-1px);
  }

  a::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -2px;
    left: 0;
    background-color: var(--color-accent);
    transition: width 0.3s ease;
  }

  a:hover::after {
    width: 100%;
  }

  button {
    font-family: inherit;
    font-size: inherit;
    border: none;
    background: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  /* Enhanced focus styles for accessibility */
  *:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }

  /* Responsive design */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-md);
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 var(--space-sm);
    }
    
    h1 {
      font-size: 2.5rem;
    }
    
    h2 {
      font-size: 2rem;
    }
    
    h3 {
      font-size: 1.5rem;
    }
  }
</style>
